{"version":3,"sources":["logo.svg","components/App.js","components/CreateGroupBuy.js","components/JoinGroupBuy.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","React","Component","CreateGroupBuy","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","createMenu","bind","assertThisInitialized","saveImage","pushMessage","axios","get","then","response","client_id","data","img_url","Promise","resolve","reject","form","FormData","append","document","getElementById","files","request","XMLHttpRequest","open","setRequestHeader","onload","status","imgur_obj","JSON","parse","responseText","link","send","user_id","match","params","post","message","type","altText","contents","hero","url","size","aspectRatio","aspectMode","action","uri","footer","layout","spacing","style","height","label","flex","console","log","catch","error","react_default","a","createElement","id","value","onClick","JoinGroupBuy","userId","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","Route","path","component","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3e8f4549.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Router, Route } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport logo from '../logo.svg';\r\nimport '../css/App.css';\r\nimport '../css/index.css';\r\n\r\nclass App extends React.Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n        <h1>App</h1>\r\n        <ul>\r\n          <li><Link to=\"/createGroupBuy\">Create Group Buy</Link></li>\r\n          <li><Link to=\"/joinGroupBuy\">Join Group Buy</Link></li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nclass App extends Component {\r\n\r\n\tconstructor (props) {\r\n\t\tsuper (props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tajaxResult: 'wait .....',\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount () {\r\n\t\tconst _this = this;\r\n\t\taxios.post('/ajax', {}).then(function(response) {\r\n\t\t\t_this.setState({\r\n\t\t\t\tajaxResult: response.data,\r\n\t\t\t});\r\n\t\t})\r\n\t\t.catch(function(err) {console.log(err);});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div id=\"App\">\r\n\t\t\t\tHello Cat\r\n\t\t\t\t<div className=\"ajaxText\">{this.state.ajaxResult}</div>\r\n\t\t\t\t<div className=\"ajaxText\">{this.state.ajaxResult}</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n*/\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport request from 'request'\n\nclass CreateGroupBuy extends React.Component {\n\n  constructor(props, context){\n    super(props, context);\n    this.createMenu = this.createMenu.bind( this );\n    this.saveImage = this.saveImage.bind( this );\n    this.pushMessage = this.pushMessage.bind( this );\n  }\n\n  createMenu(){\n    const _this = this;\n    axios.get('/api/getImgurClientId')\n    .then(function( response ) {\n      var client_id = response.data;\n      return _this.saveImage( client_id );\n    })\n    .then(function(img_url ){\n      _this.pushMessage( img_url );\n    })\n  }\n\n  saveImage( client_id ){\n    //post local choosen image to imgur api\n    return new Promise( function( resolve , reject ){\n      var form = new FormData();\n      form.append('image', document.getElementById('groupBuyImage').files[0] );\n\n      var request = new XMLHttpRequest();\n      request.open(\"POST\",'https://api.imgur.com/3/image');\n      request.setRequestHeader('Authorization', 'Client-ID ' + client_id );\n      request.onload = function() {\n        if( request.status == 200){\n          var imgur_obj =  JSON.parse( request.responseText );\n          resolve( imgur_obj.data.link );\n        }\n        else{\n          reject( 'Error :' + request.responseText);\n        }\n      };\n      request.send( form );\n    })\n  }\n\n  pushMessage( img_url ){\n    var user_id = this.props.match.params.user_id;\n\n    axios.post('/api/pushMessage', {\n      user_id : user_id,\n      message : {\n        \"type\": \"flex\",\n        \"altText\": \"團購功能選單\",\n        \"contents\": {\n            \"type\": \"bubble\",\n            \"hero\": {\n                \"type\": \"image\",\n                \"url\": img_url,\n                \"size\": \"full\",\n                \"aspectRatio\": \"20:13\",\n                \"aspectMode\": \"cover\",\n                \"action\": {\n                \"type\": \"uri\",\n                \"uri\": \"http://linecorp.com/\"\n                }\n            },\n            \"footer\": {\n                \"type\": \"box\",\n                \"layout\": \"vertical\",\n                \"spacing\": \"sm\",\n                \"contents\": [\n                {\n                    \"type\": \"button\",\n                    \"style\": \"link\",\n                    \"height\": \"sm\",\n                    \"action\": {\n                    \"type\": \"uri\",\n                    \"label\": \"建立團購\",\n                    \"uri\": 'http://www.google.com' \n                    }\n                },\n                {\n                    \"type\": \"button\",\n                    \"style\": \"link\",\n                    \"height\": \"sm\",\n                    \"action\": {\n                    \"type\": \"uri\",\n                    \"label\": \"團購列表\",\n                    \"uri\": 'http://www.google.com' \n                    }\n                },\n                {\n                    \"type\": \"spacer\",\n                    \"size\": \"sm\"\n                }\n                ],\n                \"flex\": 0\n            }\n        }\n      }\n    })\n    .then( function( response ) {\n      console.log( response );\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render () {\n    return (\n      <div>\n        <h1>建立團購</h1>\n        請上傳團購圖片： <input id='groupBuyImage' type='file' />\n        <hr/>\n        <input type='button' value='建立' onClick={ this.createMenu } />\n      </div>\n    );\n  }\n}\n\nexport default CreateGroupBuy;","import React, { Component } from 'react';\n\nclass JoinGroupBuy extends React.Component {\n  render () {\n    const id = this.props.match.params.userId;\n    return (\n      <div>\n        <h1>訂購</h1>\n      </div>\n    )\n  }\n}\n\nexport default JoinGroupBuy;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { hashHistory } from 'react-router'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\nimport './css/index.css';\nimport App from './components/App';\nimport CreateGroupBuy from './components/CreateGroupBuy';\nimport JoinGroupBuy from './components/JoinGroupBuy';\nimport * as serviceWorker from './serviceWorker';\n\n//ReactDOM.render(<App />, document.getElementById('root'));\n\nReactDOM.render(\n  (\n    <Router>\n        <div>\n          {/* <Route path=\"/\" component={App}/> */}\n          <Route path=\"/createGroupBuy/:user_id\" component={CreateGroupBuy}/>\n          <Route path=\"/joinGroupBuy\" component={JoinGroupBuy} />\n        </div>\n    </Router>\n  ),\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}